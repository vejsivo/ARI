%% 1.1 nalezení statické hodnotypoles = [-3, -2, -1];num = [-1 25];den = poly(poles);G = tf(num, den); % definování systémuK = rats(dcgain(G)) %nalezení statické hodnoty systému%% 1.2 nalezení ustálené hodnoty pøi vstupu U(t) = 5W = G * (tf([5], [1 0])); %násobení 5/Srats(dcgain(W * tf([1 0], [1]))) %% 2.2 vykreslení grafù prùbìhu spoèítaných funkcít = linspace(0, 4, 1000);  % Time from 0 to 5 seconds% Compute x1(t) and x2(t)x1 = 2 * exp(-3*t) .* cos(2*t) - 3 * exp(-3*t) .* sin(2*t);x2 = (-1/2) * exp(-3*t) .* sin(2*t);% Plot both functions on the same graphfigure;plot(t, x1, 'b', 'LineWidth', 0.6); % x1(t) in bluehold on;  % Keep current plotplot(t, x2, 'r', 'LineWidth', 0.6); % x2(t) in redhold off; % Release hold% Formattinggrid on;xlabel('Èas[s]');ylabel('Amplituda');title('Èasová odezva');legend({'x_1(t)',...        'x_2(t)'}, 'Location', 'best');saveas(gcf, 'time_response.eps', 'epsc');%% diskretizace systémunum = [1 -3];   % (s - 3) -> Coefficients of sden = conv([1 1], [1 7]); % (s + 1)(s + 7)% Create transfer functionG = tf(num, den);G1 = c2d(G, 0.2);G2 = c2d(G, 4 );% Time vector for continuous system simulationt = linspace(0, 10, 1000); % From 0 to 20s, 1000 points% Compute impulse (Dirac delta) responses[y_cont, t_cont] = step(G, t); % Continuous system response[y_disc1, t_disc1] = step(G1); % Discrete system 1 response[y_disc2, t_disc2] = step(G2); % Discrete system 2 response% Plot all impulse responses in one figurefigure;hold on;plot(t_cont, y_cont, 'b', 'LineWidth', 2); % Continuous system (blue)stem(t_disc1, y_disc1, 'ro', 'MarkerSize', 5); % Discrete G1 (red circles)stem(t_disc2, y_disc2, 'gs', 'MarkerSize', 5); % Discrete G2 (green squares)% Formattinglegend('Continuous G(s)', 'Discrete G_1(z), Ts=0.1s', 'Discrete G_2(z), Ts=3s', 'Location', 'best');xlabel('Time (s)');ylabel('Impulse Response');title('Comparison of Continuous and Discrete Impulse Responses (Dirac)');grid on;hold off;GG1G2