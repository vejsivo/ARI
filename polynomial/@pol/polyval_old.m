function [Ev, D] = polyval(P,pnt,S,tol)
%POLYVAL  Evaluate a polynomial matrix
%
% For scalar PNT, the command
%    EV = POLYVAL(P,PNT)
% evaluates the polynomial matrix P in the complex point PNT. 
% If PNT is a vector of points PNT = [PNT1,...,PNTn] then EV 
% is a 3-d array of values such that
% 	  EV(:,:,i) = P(PNTi)
%
% The command
%    [EV, DELTA] = POLYVAL(P,PNT,S) 
% uses the optional output structure array generated by POLFIT to 
% generate error estimates
%		     Y +/- DELTA. 
% If PNT is a vector then DELTA is a 3-d array. 
%
% The commands
%    EV = POLYVAL(P,PNT,S,TOL) 
%    EV = POLYVAL(P,PNT,[],TOL) 
% evaluate the polynomial matrix P in the vector PNT and set all
% the entries in the result with absolute value less then TOL 
% equal to 0
%
% See also: POLFIT.

%	Author(s): M. Hromcik, M. Sebek 2-3-98
%	Copyright (c) 1998 by Polyx, Ltd.
%       $Revision: 4.0 $  $Date: 7-Sep-1998 10:28:34   $

% Effect on other properties:
% Ev is a double or cell array.

ni = nargin;
no = nargout;
narginchk(2,4);
% error(nargchk(2,4,ni));	%REMOVED IN NEW MATLABS

if isempty(pnt)
  error('The vector of evaluation points is empty.');
end;

SizPnt = size(pnt);

if SizPnt(1) > 1,
  pnt = pnt.';
  SizPnt = fliplr(SizPnt);
end;  

if SizPnt(1) > 1,
  error('The set of evaluation points is not a vector.');
end;

P = pol(P);
Pd = P.d;
Ps = P.s;
len = length(pnt);
prd = prod(Ps);

if isempty(Pd),					% empty matrix
      Ev = zeros([Ps len]);
      D  = zeros([Ps len]);
      return;

elseif isinf(Pd)				% zero matrix
      Ev = zeros([Ps len]);
      D  = zeros([Ps, len]);
      return
 
elseif (Pd < prd) & ni < 3,	% (large size & low degree) & 1 output 
      Pc = P.c;
      siz = [Ps(1), Ps(2)*len];
      Ev = zeros(siz);
      q = reshape( repmat( pnt,[prod(Ps) 1] ), siz );
      for i = Pd:-1:0,
          P = repmat( Pc(:,:,i+1), 1, size(pnt,2) );
          Ev = Ev.*q + P; 
      end; 
      Ev = reshape(Ev, [Ps,len]);

else				% (small size & high degree) or 2 outputs
      Pc = flipdim(P.c, 3);
      Ev = zeros( [Ps length(pnt)] );
      D  = zeros([Ps length(pnt)]);
      if no <= 1,
         for i = 1:Ps(1),
           for j = 1:Ps(2),
             Ev(i,j,:) = polyval( Pc(i,j,:), pnt );
           end;  
         end; 
      else
	     narginchk(3,4);
         % error(nargchk(3,4,ni));	%REMOVED IN NEW MATLABS
      	 for i = 1:Ps(1),
           for j = 1:Ps(2),
             Sij = S(i,j);
             Rij = Sij.R;
             pc = zeros(1, size(Rij,2));
             pom = Pc(i,j,:);
             pc(end - length(pom) + 1:end) = pom;
             %if max(size(Rij)) == 1, pc = pc(1); end; 
             [Ev(i,j,:), D(i,j,:)] = polyval( pc, pnt, S(i,j) );
           end;  
         end; 
      end;     
end;

if ni == 4, 
  Ev(Ev<tol) = 0;
end;

%end .. @pol/polyval
